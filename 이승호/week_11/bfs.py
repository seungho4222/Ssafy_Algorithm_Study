from collections import deque

# 상 하 좌 우
dr = [-1, 1, 0, 0]
dc = [0, 0, -1, 1]

W, H = map(int, input().split())  # W: 열, H: 행
laser = []  # 2개의 C 좌표
arr = []

for r in range(H):
    arr.append(input())
    for c in range(W):
        if arr[r][c] == 'C':
            laser.append([r,c])

D = [[float('inf')] * W for _ in range(H)]


def bfs(sr, sc):
    q = deque()
    q.append([sr, sc])
    D[sr][sc] = -1

    while q:
        r, c = q.popleft()
        if r == laser[1][0] and c == laser[1][1]:
            return D[laser[1][0]][laser[1][1]]
        for d in range(4):
            nr, nc = r + dr[d], c + dc[d]
            while True:
                # if nr == laser[1][0] and nc == laser[1][1]:
                #     return D[r][c] + 1
                if not (0 <= nr < H and 0 <= nc < W):  # 범위 벗어났다
                    break
                if D[nr][nc] < D[r][c] + 1:  # 이미 적은 횟수로 방문했다
                    break
                if arr[nr][nc] == '*':  # 벽이다
                    break
                q.append([nr, nc])
                D[nr][nc] = D[r][c] + 1
                nr += dr[d]
                nc += dc[d]


print(bfs(laser[0][0], laser[0][1]))
# print(D)


'''
4 5
C..*
...*
...*
*.**
...C

100 7
...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*
C*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.*
...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*
**************************************************************************************************.*
...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*
C*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.*
...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*...*

'''